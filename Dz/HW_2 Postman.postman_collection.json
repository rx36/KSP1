{
	"info": {
		"_postman_id": "d1f30264-9065-4a4b-a0d2-754a3fb8a6d3",
		"name": "HW_2 Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var resp_JSON = pm.response.json();\r",
							"\r",
							"pm.test(\"name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Ron\");\r",
							"});\r",
							"pm.test(\"age\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.eql(\"40\");\r",
							"});\r",
							"pm.test(\"salary\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary).to.eql(1000);\r",
							"});\r",
							"var request = request.data;\r",
							"console.log (request);\r",
							"\r",
							"pm.test(\"name_req\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(request.name);\r",
							"});\r",
							"pm.test(\"name_age\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.eql(request.age);\r",
							"});\r",
							"pm.test(\"name_salary\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary).to.eql +(request.salary);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.family);\r",
							"\r",
							"pm.test(\"u_salary_1_5_year\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.u_salary_1_5_year).to.eql +(request.salary*4);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Ron",
							"type": "text"
						},
						{
							"key": "age",
							"value": "40",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var request = pm.request.url.query.all();\r",
							"var response = pm.response.json();\r",
							"//var response = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"name_req = name_resp\", function () {\r",
							"       pm.expect(response.name).to.eql(request[0].value);\r",
							"});\r",
							"\r",
							"pm.test(\"age_req = age_resp\", function () {\r",
							"       pm.expect(response.age).to.eql(request[1].value);\r",
							"});\r",
							"pm.test(\"salary_req = salary_resp\", function () {\r",
							"       pm.expect(response.salary).to.eql(+request[2].value);\r",
							"});\r",
							"console.log (response.family);\r",
							"\r",
							"tests[\"Name is TRUE\"] = response.family.pets.dog.name !== null;\r",
							"\r",
							"pm.test('Age is TRUE', function() {\r",
							"  pm.expect(response.family.pets.dog).to.have.property('age');\r",
							"});\r",
							"\r",
							"pm.test(\"dog.Luky\", function () {\r",
							"       pm.expect(response.family.pets.dog.name).to.eql(\"Luky\");\r",
							" });\r",
							"pm.test(\"dog.4\", function () {\r",
							"       pm.expect(response.family.pets.dog.age).to.eql(4); \r",
							"        });      "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Ron&age=40&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Ron"
						},
						{
							"key": "age",
							"value": "40"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var request = pm.request.url.query.all();\r",
							"var response = pm.response.json();\r",
							"\r",
							"pm.test(\"Name_resp =name_req\", function () {\r",
							"        pm.expect(response.name).to.eql(request[0].value);\r",
							"});\r",
							"\r",
							"pm.test(\"Age_resp =age_req\", function () {\r",
							"        pm.expect(response.age).to.eql(+request[1].value);\r",
							"});\r",
							"\r",
							"console.log(request[2].value);\r",
							"console.log(response.salary);\r",
							"console.log(response.salary[0]);\r",
							"console.log(response.salary[1]);\r",
							"console.log(response.salary[2]);\r",
							"\r",
							"pm.test(\"salary [0] = salary request\", function () {\r",
							"    pm.expect(response.salary[0]).to.eql(+(request[2].value));\r",
							"});\r",
							"\r",
							"pm.test(\"salary [1] = salary request*2\", function () {\r",
							"    pm.expect(+response.salary[1]).to.eql((request[2].value)*2);\r",
							"});\r",
							"\r",
							"pm.test(\"salary [2] = salary request*3\", function () {\r",
							"    pm.expect(+response.salary[2]).to.eql((request[2].value)*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(`name`, request[0].value);\r",
							"pm.environment.set(`age`, request[1].value);\r",
							"pm.environment.set(`salary`, request[2].value);\r",
							"\r",
							"for(var i=0; i<response.salary.length; i++){\r",
							"    console.log(\"Переменная Salary\" +\"\"+ i + \": \" + response.salary[i]);\r",
							"};\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Ron&age=40&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Ron"
						},
						{
							"key": "age",
							"value": "40"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var response = pm.response.json();\r",
							"var request = request.data;\r",
							"\r",
							"pm.test('start_qa_salary is TRUE', function() {\r",
							"  pm.expect(response).to.have.property('start_qa_salary');\r",
							"});\r",
							"pm.test('qa_salary_after_6_months is TRUE', function() {\r",
							"  pm.expect(response).to.have.property('qa_salary_after_6_months');\r",
							"});\r",
							"pm.test('qa_salary_after_12_months is TRUE', function() {\r",
							"  pm.expect(response).to.have.property('qa_salary_after_12_months');\r",
							"});\r",
							"pm.test('qa_salary_after_1.5_year is TRUE', function() {\r",
							"  pm.expect(response).to.have.property('qa_salary_after_1.5_year');\r",
							"});\r",
							"pm.test('qa_salary_after_3.5_years is TRUE', function() {\r",
							"  pm.expect(response).to.have.property('qa_salary_after_3.5_years');\r",
							"});\r",
							"pm.test('person is TRUE', function() {\r",
							"  pm.expect(response).to.have.property('person');\r",
							"});\r",
							"pm.test(\"salary_resp=salary_req\", function () {\r",
							"    pm.expect(response.start_qa_salary).to.eql(+request.salary);\r",
							"});\r",
							"pm.test(\"salary6m_resp=salary_req*2\", function () {\r",
							"    pm.expect(response.qa_salary_after_6_months).to.eql(+request.salary*2);\r",
							"});\r",
							"pm.test(\"salary12m_resp=salary_req*2.7\", function () {\r",
							"    pm.expect(response.qa_salary_after_12_months).to.eql(+request.salary*2.7);\r",
							"});\r",
							"pm.test(\"salary1.5y_resp=salary_req*3.3\", function () {\r",
							"    pm.expect(response['qa_salary_after_1.5_year']).to.eql(+request.salary*3.3);\r",
							"});\r",
							"pm.test(\"salary3.5y_resp=salary_req*3.8\", function () {\r",
							"    pm.expect(response['qa_salary_after_3.5_years']).to.eql(+request.salary*3.8);\r",
							"});\r",
							"pm.test(\"u_name_resp=salary_req\", function () {\r",
							"    pm.expect(response.person.u_name[1]).to.eql(+request.salary);\r",
							"});\r",
							"pm.test(\"u_age_resp=age_req\", function () {\r",
							"    pm.expect(response.person.u_age).to.eql(+request.age);\r",
							"});\r",
							"pm.test(\"salary3.5y_resp=salary_req*4.2\", function () {\r",
							"    pm.expect(response.person.u_salary_5_years).to.eql(+request.salary*4.2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}



Group_23.postman_environment


{
	"id": "012ede6c-8ba1-4c53-9f26-eea86db1ba69",
	"name": "Group_23",
	"values": [
		{
			"key": "name",
			"value": "",
			"enabled": true
		},
		{
			"key": "age",
			"value": "",
			"enabled": true
		},
		{
			"key": "salary",
			"value": "",
			"enabled": true
		},
		{
			"key": "url",
			"value": "",
			"enabled": true
		},
		{
			"key": "token",
			"value": "",
			"enabled": true
		}
	],
	"_postman_variable_scope": "environment",
	"_postman_exported_at": "2021-10-21T14:22:00.668Z",
	"_postman_exported_using": "Postman/9.0.7"
}